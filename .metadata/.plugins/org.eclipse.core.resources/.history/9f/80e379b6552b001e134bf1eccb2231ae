package com.ys.sbbs.controller;

import org.mindrot.jbcrypt.BCrypt;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.ys.sbbs.entity.User;
import com.ys.sbbs.service.UserService;

@Controller
@RequestMapping("/user")
public class UserController {
	
	@Autowired private UserService userService;
	
	@GetMapping("/register")
	public String registerForm() {
		return "/user/register";
	}
	
	@PostMapping("/register")
	public String registerProc(MultipartHttpServletRequest req, Model model) {
		
		String uid  = req.getParameter("uid");
		String pwd  = req.getParameter("pwd");
		String pwd2 = req.getParameter("pwd2");
		String uname = req.getParameter("uname");
		String email = req.getParameter("email");
		String addr  = req.getParameter("addr");
		User user = null;
		String filename = null;
		
//		filePart = request.getPart("profile");

		if ( userService.getUser(uid) != null ) {
			model.addAttribute("msg", "사용자 ID가 중복되었습니다. ");
			model.addAttribute("url", "/sbbs/user/register");
			return "common/alertMsg";
		} else if ( !pwd.equals(pwd2) || pwd.length() < 2 ) {
			model.addAttribute("msg", "패스워드 입력이 잘못되었습니다.");
			model.addAttribute("url", "/bbs/user/register");
			return "common/alertMsg";
		} else {
			String hashedPwd = BCrypt.hashpw(pwd, BCrypt.gensalt());
			user = new User(uid, hashedPwd, uname, email, filename, addr);
			userService.insertUser(user);
			model.addAttribute("msg", "패스워드 입력이 잘못되었습니다.");
			model.addAttribute("url", "/bbs/user/register");
			return "common/alertMsg";
		}
		
		return "";
	}
}
