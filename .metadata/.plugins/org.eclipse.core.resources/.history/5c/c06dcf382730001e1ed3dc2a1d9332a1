package com.ys.sbbs.db;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.ys.sbbs.entity.User;

public class OracleDao {

	public Connection getConnection() {
		
		String driver = "oracle.jdbc.driver.OracleDriver";
	//	String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String url = "jdbc:oracle:thin:@localhost:1521/xepdb1";
		String user = "ysuser";
		String password = "yspass";
		
		Connection conn = null;
		
		try {
			Class.forName(driver);
//			System.out.println("jdbc driver 로딩 성공");
			conn = DriverManager.getConnection(url, user, password);
//			System.out.println("오라클 연결 성공");
		} catch (ClassNotFoundException e) {
			System.out.println("jdbc driver 로딩 실패");
		} catch (SQLException e) {
			System.out.println("오라클 연결 실패");
		}
		
		/*접속 해제 처리*/
//		try {
//			conn.close();
//			System.out.println("연결 해제");
//		} catch (Exception e) {
//			System.out.println("해제 오류");
//		}
		
		return conn;
	}
	
	public void getUserAllCount() {
		Connection conn = getConnection();
		
		String sql = "select count(uid) from users where isDeleted=0";

		int count = 0;
		
		try {
			
			Statement stmt = conn.createStatement();
			
			ResultSet rs = stmt.executeQuery(sql);
			while(rs.next()) {
				count = rs.getInt(1);
				System.out.println("getUserAllCount = " + count);
			}
			rs.close();
			stmt.close();
			conn.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}		
	}
	
	public List<User> getListUser(int page) {
		List<User> list = new ArrayList<User>();
		int offset = (page - 1) * 10;
		Connection conn = getConnection();
		String sql = "select * from users where isDeleted=0";
		
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, offset);
			ResultSet rs = pstmt.executeQuery();
			while(rs.next()) {
				
				list.add(new User(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4),
						LocalDate.parse(rs.getString(5)), rs.getInt(6), rs.getString(7), rs.getString(8)));
			}
			
			rs.close();
			pstmt.close();
			conn.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return list;
		
	}
}
